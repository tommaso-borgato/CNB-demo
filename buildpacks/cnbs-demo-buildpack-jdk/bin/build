#!/usr/bin/env bash

set -eo pipefail

LAYERS_DIR="$1"
env_dir="$2/env"
plan_path="$3"



# ==================================================
# JAVA LAYER
# ==================================================

JDK_DIR="$LAYERS_DIR"/jdk

echo "---> JDK Buildpack JDK_DIR=${JDK_DIR}"

# LOAD USER-PROVIDED BUILD-TIME ENVIRONMENT VARIABLES
if compgen -G "${env_dir}/*" > /dev/null; then
  for var in ${env_dir}/*; do
    declare "$(basename ${var})=$(<${var})"
  done
fi

if [[ ! -f ${JDK_DIR}.toml ]]; then

  mkdir -p "$JDK_DIR"
  mkdir -p "$JDK_DIR"/env

  echo "---> Downloading and extracting JDK"
  jdk_url=https://download.java.net/java/GA/jdk17.0.2/dfd4a8d0985749f896bed50d7138ee7f/8/GPL/openjdk-17.0.2_linux-x64_bin.tar.gz
  wget -q -O - "$jdk_url" | tar pxz -C "${JDK_DIR}" --strip-components=1

  cat > "${JDK_DIR}.toml" << EOF
[types]  
launch = true
build = true
cache = true
[metadata]
version = "17.0.2"
url = "${jdk_url}"
EOF

  echo "$JDK_DIR" > "$JDK_DIR"/env/JAVA_HOME
  if [[ -z ${LD_LIBRARY_PATH} ]]; then
    echo "${JAVA_HOME}/jre/lib/amd64/server" > ${JDK_DIR}/env/LD_LIBRARY_PATH
  else
    echo "${JAVA_HOME}/jre/lib/amd64/server:${LD_LIBRARY_PATH}" > ${JDK_DIR}/env/LD_LIBRARY_PATH
  fi

  mkdir -p ${JDK_DIR}/profile.d
  cat > "${JDK_DIR}/profile.d/jdk.sh" << EOF
export JAVA_HOME=${JDK_DIR}
if [[ -z \$LD_LIBRARY_PATH ]]; then
  export LD_LIBRARY_PATH="\$JAVA_HOME/jre/lib/amd64/server"
else
  export LD_LIBRARY_PATH="\$JAVA_HOME/jre/lib/amd64/server:${LD_LIBRARY_PATH}"
fi
EOF

fi

# Set env variables to make jdk accessible
for var in "$JDK_DIR"/env/*; do
  declare "$(basename "$var")=$(<"$var")"
done
export PATH=${JDK_DIR}/bin:$PATH
export JAVA_HOME=${JDK_DIR}



# ==================================================
# MAVEN LAYER
# ==================================================

MAVEN_DIR="$LAYERS_DIR"/maven

echo "---> MAVEN Buildpack MAVEN_DIR=${MAVEN_DIR}"

# LOAD USER-PROVIDED BUILD-TIME ENVIRONMENT VARIABLES
if compgen -G "${env_dir}/*" > /dev/null; then
  for var in ${env_dir}/*; do
    declare "$(basename ${var})=$(<${var})"
  done
fi

if [[ ! -f ${MAVEN_DIR}.toml ]]; then

  mkdir -p "$MAVEN_DIR"
  mkdir -p "$MAVEN_DIR"/env

  echo "---> Downloading and extracting MAVEN"
  mvn_url=https://dlcdn.apache.org/maven/maven-3/3.8.4/binaries/apache-maven-3.8.4-bin.tar.gz
  wget -q -O - "$mvn_url" | tar pxz -C "${MAVEN_DIR}" --strip-components=1

  echo "---> Content of $LAYERS_DIR folder"
  ls -l "$LAYERS_DIR"
  echo "---> Content of $MAVEN_DIR folder"
  ls -l "$MAVEN_DIR"

  cat > "${MAVEN_DIR}.toml" << EOF
[types]  
launch = false
build = true
cache = true
[metadata]
version = "3.8.4"
url = "${mvn_url}"
EOF

  echo "$MAVEN_DIR" > "$MAVEN_DIR"/env/M2_HOME

  mkdir -p ${MAVEN_DIR}/profile.d
  cat > "${MAVEN_DIR}/profile.d/maven.sh" << EOF
export M2_HOME=${MAVEN_DIR}
EOF

fi

# Set env variables to make maven accessible
for var in "$MAVEN_DIR"/env/*; do
  declare "$(basename "$var")=$(<"$var")"
done
export PATH=${MAVEN_DIR}/bin:$PATH
export M2_HOME=${MAVEN_DIR}

mvn package



# ==================================================
# LAUNCH
# ==================================================
cp target/ROOT.jar ROOT.jar

# Set default start command
cat > "$LAYERS_DIR/launch.toml" << EOL
[[processes]]
type = "web"
command = "java -jar ROOT.jar"
default = true
EOL



exit 0
